AWSTemplateFormatVersion: '2010-09-09'
Description: create role users must assume to gain READ/WRITE access to Terraform OperationalResources

Parameters: 
  Session:
    Type: String
  RoleName: 
    Type: String 
  LogAccountId:
    Type: String    
  LockTableArns:
    Type: CommaDelimitedList
    Description: >-
      comma-delimited list of exported lock table arns backendRole is granted access to
  StateBucketArns:
    Type: CommaDelimitedList
    Description: >
      comma-delimited list of exported state bucket arns backendRole 
      is granted access to
  TrustedAccountId:
    Type: String

  ValueForPrincipalTag:
    Type: String
Rules:
  Deployment:
    Assertions:
      - Assert: !Equals
        - !Ref AWS::AccountId
        - !Ref LogAccountId 
        AssertDescription: "resources must be created in OperationalResources account"

Resources:
  Role: 
    Type: 'AWS::IAM::Role'
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties: 
      RoleName: !Ref RoleName
      Description: assume to obtain access to Terraform Operational Resources
      MaxSessionDuration: !Ref Session
      ManagedPolicyArns:
        - !Ref RolePolicy
      AssumeRolePolicyDocument: #trust policy for role
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal: 
              AWS: !Ref TrustedAccountId #TrustedAccount
            Action:
              - 'sts:AssumeRole'
            Condition:
              Bool: # must authenticate via mfa to assume role
                aws:MultiFactorAuthPresent: true
              StringEquals:
                aws:PrincipalType:
                  - "User"
              StringLike:
                aws:PrincipalTag/Terraformers:
                  - !Ref ValueForPrincipalTag
                sts:RoleSessionName:
                  - '${aws:username}'
  RolePolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties: 
      ManagedPolicyName: TerraformStateFilesPermissions
      Description: grants read/write access to Terraform Operational Resources
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowStateBucketList
            Effect: Allow
            Action: 
              - 's3:ListBucket'
              - 's3:GetBucketVersioning'
            Resource: 
              ## add new StateBucketArns when new resource set is created 
              - Fn::ImportValue: !Select [0, !Ref StateBucketArns]
              - Fn::ImportValue: !Select [1, !Ref StateBucketArns]
              - Fn::ImportValue: !Select [2, !Ref StateBucketArns]
              - Fn::ImportValue: !Select [3, !Ref StateBucketArns]

          - Sid: AllowStateReadWrite
            Effect: Allow
            Action:
              - 's3:GetObject'
              - 's3:PutObject'
            Resource: 
            ## add new StateBucketArns when new resource set is created 
              - !Join 
                - ''
                - - Fn::ImportValue: !Select [0, !Ref StateBucketArns]
                  - /* 
              - !Join 
                - ''
                - - Fn::ImportValue: !Select [1, !Ref StateBucketArns]
                  - /* 
              - !Join 
                - ''
                - - Fn::ImportValue: !Select [2, !Ref StateBucketArns]
                  - /* 
              - !Join 
                - ''
                - - Fn::ImportValue: !Select [3, !Ref StateBucketArns]
                  - /* 
          - Sid: AllowStateLockReadWrite
            Effect: Allow
            Action:
              - 'dynamodb:DescribeTable'
              - 'dynamodb:GetItem'
              - 'dynamodb:PutItem'
              - 'dynamodb:DeleteItem'  
              - 'dynamodb:ListTagsOfResource'
            Resource: 
            ## add new LockTableArns when new resource set is created               
              - Fn::ImportValue: !Select [0, !Ref LockTableArns]
              - Fn::ImportValue: !Select [1, !Ref LockTableArns]
              - Fn::ImportValue: !Select [2, !Ref LockTableArns]
              - Fn::ImportValue: !Select [3, !Ref LockTableArns]

Outputs:
  RoleId:
    Description: role id
    Value: !GetAtt Role.RoleId
    Export:
      Name: BackendRoleId

  RoleArn:
    Description: role arn
    Value: !GetAtt Role.Arn
    Export:
       Name: BackendRoleArn
