AWSTemplateFormatVersion: '2010-09-09'
Description: Create Groups and Users for Terraform Operational Resources 
Metadata:
  AWS::Cloudformation::Interface:
    ParameterGroups:
      - Label:
          default: Trusted Account Config
        Parameters:
          - Group1Name
          - Group1UserName
          - Group2Name
          - Group2UserName
          - ResourceAccessor
          - CommonGroupPermissionPolicyName
      - Label: 
          default: Trusting Account Config
        Parameters: 
          - RoleName
          - ResourceOwner
          - CommonGroupUserTagKey
          - Group1UserTagValue
          - Group2UserTagValue
          - NameOfTrustingAccount
Parameters:
  Group1Name:
    Type: String
  Group1UserName:
    Type: String
  Group2Name:
    Type: String
  Group2UserName:
    Type: String   
  ResourceAccessor:
    Type: String
    Description: resource accessor is the trusted account
  CommonGroupPermissionPolicyName:
    Type: String
  RoleName: 
    Type: String
  ResourceOwner:
    Type: String
    Description: resource owner is the trusting account
  CommonGroupUserTagKey:
    Type: String
  Group1UserTagValue:
    Type: String 
  Group2UserTagValue:
    Type: String
  NameOfTrustingAccount: 
    Type: String
Rules:
  Deployment:
    Assertions:
      - Assert: !Equals
          - !Ref AWS::AccountId
          - !Ref ResourceAccessor
        AssertDescription: "groups and users must be deployed in trusted Account"  
Resources:
  GroupOne:
    Type: AWS::IAM::Group
    Properties:
      GroupName: !Sub "${Group1Name}"
      ManagedPolicyArns: 
        - !Ref CommonPermissionPolicy
  GroupOneUser:
    Type: AWS::IAM::User
    Properties:
      Groups:
        - !Ref GroupOne
      UserName: !Sub "${Group1UserName}"          
      Tags:
        - Key: !Sub "${CommonGroupUserTagKey}"
          Value: !Sub "${Group1UserTagValue}" 

  CommonPermissionPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      ManagedPolicyName: !Sub "${CommonGroupPermissionPolicyName}"
      Description: !Sub "Grant permission to assume ${RoleName} in ${NameOfTrustingAccount}"
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: !Sub "AllowedToAssume${RoleName}In${NameOfTrustingAccount}Account"
            Effect: Allow
            Action: 
              - 'sts:AssumeRole'
            Resource:
              - !Sub "arn:aws:iam::${ResourceOwner}:role/${RoleName}"


  GroupTwo:
    Type: AWS::IAM::Group
    Properties:
      GroupName: !Sub "${Group2Name}"
      ManagedPolicyArns: 
        - !Ref CommonPermissionPolicy        
  GroupTwoUser:
    Type: AWS::IAM::User
    Properties:
      Groups:
        - !Ref GroupTwo
      UserName: !Sub ${Group2UserName}          
      Tags:
        - Key: !Sub ${CommonGroupUserTagKey}
          Value: !Sub ${Group2UserTagValue}