AWSTemplateFormatVersion: '2010-09-09'
Description: create role users must assume to gain READ/WRITE access to Terraform OperationalResources

Parameters: 
  Setup: 
    Type: String  
  RoleName: 
    Type: String 
  PolicyName:
    Type: String
  MaxSession:
    Type: String
  UserTagValue:
    Type: String
  LockTableArns:
    Type: CommaDelimitedList
    Description: >-
      comma-delimited list of exported lock table arns backendRole is granted access to
  StateBucketArns:
    Type: CommaDelimitedList
    Description: >
      comma-delimited list of exported state bucket arns backendRole 
      is granted access to
  ResourceAccessorAccountId:
    Type: String
  OperationalResourcesAccountId:
    Type: String


Conditions: 
  isSingleAccountSetup: !Equals ["single", !Ref Setup]
  isMultiAccountSetup: !Equals ["multiple", !Ref Setup] 


Rules:
  Deployment:
    Assertions:
      - Assert: !Equals
        - !Ref AWS::AccountId
        - !Ref OperationalResourcesAccountId 
        AssertDescription: "resources must be created in OperationalResources account"

Resources:
  OperationalResourcesRole: 
    Type: 'AWS::IAM::Role'
    DeletionPolicy: Delete
    UpdateReplacePolicy: Retain
    Properties: 
      RoleName: !Ref RoleName
      Description: assume to obtain access to Terraform Operational Resources
      MaxSessionDuration: !Ref MaxSession
      ManagedPolicyArns:
        - !Ref RolePolicy
      AssumeRolePolicyDocument: #trust policy for role
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal: 
              AWS: !Ref ResourceAccessorAccountId #TrustedAccount
            Action:
              - 'sts:AssumeRole'
            Condition:
              Bool: # must authenticate via mfa to assume role
                aws:MultiFactorAuthPresent: true
              StringEquals:
                aws:PrincipalType:
                  - "User"
              StringLike:
                aws:PrincipalTag/Terraformers:
                  - !Ref UserTagValue
                sts:RoleSessionName:
                  - '${aws:username}'
  RolePolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    DeletionPolicy: Delete
    UpdateReplacePolicy: Retain
    Properties: 
      ManagedPolicyName: !Ref PolicyName 
      Description: grants read/write access to Terraform Operational Resources
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowStateBucketList
            Effect: Allow
            Action: 
              - 's3:ListBucket'
              - 's3:GetBucketVersioning'
            Resource:
              - Fn::ImportValue: !Select [0, !Ref StateBucketArns]
              ## Uncomment to update resources list 
              # - Fn::ImportValue: !Select [1, !Ref StateBucketArns]
              # - Fn::ImportValue: !Select [2, !Ref StateBucketArns]

          - Sid: AllowStateReadWrite
            Effect: Allow
            Action:
              - 's3:GetObject'
              - 's3:PutObject'
            Resource: 
              - !Join 
                - ''
                - - Fn::ImportValue: !Select [0, !Ref StateBucketArns]
                  - /*
              # - !Join 
              #   - ''
              #   - - Fn::ImportValue: !Select [1, !Ref StateBucketArns]
              #     - /*
              # - !Join 
              #   - ''
              #   - - Fn::ImportValue: !Select [2, !Ref StateBucketArns]
              #     - /*
          - Sid: AllowStateLockReadWrite
            Effect: Allow
            Action:
              - 'dynamodb:DescribeTable'
              - 'dynamodb:GetItem'
              - 'dynamodb:PutItem'
              - 'dynamodb:DeleteItem'  
              - 'dynamodb:ListTagsOfResource'
            Resource: 
              - Fn::ImportValue: !Select [0, !Ref LockTableArns]
              # - Fn::ImportValue: !Select [1, !Ref LockTableArns]
              # - Fn::ImportValue: !Select [2, !Ref LockTableArns]


# make export name of outputs unique so that we can update both this stack and stacks that depend on it. Accomplished this by appending value of ${Setup} to 
Outputs:
  SingleAccountSetupRoleId:
    Condition: isSingleAccountSetup
    Description: role id
    Value: !GetAtt OperationalResourcesRole.RoleId
    Export:
      Name: OperationalResourcesRoleId

  SingleAccountSetupRoleArn:
    Condition: isSingleAccountSetup
    Description: role arn
    Value: !GetAtt OperationalResourcesRole.Arn
    Export:
      Name: OperationalResourcesRoleArn

  MultiAccountSetupRoleId:
    Condition: isMultiAccountSetup
    Description: role id
    Value: !GetAtt OperationalResourcesRole.RoleId
    Export:
       Name: OperationalResourcesRoleId

  MultiAccountSetupRoleArn:
    Condition: isMultiAccountSetup
    Description: role arn
    Value: !GetAtt OperationalResourcesRole.Arn
    Export:
       Name: OperationalResourcesRoleArn