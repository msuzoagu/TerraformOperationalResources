AWSTemplateFormatVersion: '2010-09-09'
Description: create users permitted to run terraform commands

Parameters: 
  Setup: 
    Type: String
  RoleName:
    Type: String
  Username:
    Type: String  
  UserGroup:
    Type: String
  UserTagKey:
    Type: String
  UserTagValue:
    Type: String
  UserPolicyName:
    Type: String
  ResourceAccessorAccountId:
    Type: String
  OperationalResourcesAccountId:
    Type: String

Conditions: 
  isSingleAccountSetup: !Equals ["single", !Ref Setup]
  isMultiAccountSetup: !Equals ["multiple", !Ref Setup] 


Rules:
  Deployment:
    Assertions:
      - Assert: !Equals
        - !Ref AWS::AccountId
        - !Ref ResourceAccessorAccountId
        AssertDescription: 'deployed in account where users are managed'


Resources:
  User:
    Type: AWS::IAM::User
    DeletionPolicy: Delete
    UpdateReplacePolicy: Retain    
    Properties:
      Groups: 
        - !Ref UserGroup
      Tags:
        - Key: !Ref UserTagKey
          Value: !Ref UserTagValue
      UserName: !Ref Username

  UserPolicy: 
    Type: AWS::IAM::Policy
    DeletionPolicy: Delete
    UpdateReplacePolicy: Retain    
    Properties:
      Users: 
        - !Ref User
      PolicyName: !Ref UserPolicyName
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowUserToVieWGeneralInfo
            Effect: Allow
            Action: 
              - 'iam:GetGroupPolicy'
              - 'iam:ListGroupPolicies'
              - 'iam:ListAttachedUserPolicies'
              - 'iam:ListAttachedGroupPolicies'
            Resource: '*'
          
          - Sid: AllowUserToViewRelevantRoles #Ddoesn't work 4 crossAccountAccess
            Effect: Allow
            Action: 
              - 'iam:GetRole'
            Resource: 
              - !Sub "arn:aws:iam::${OperationalResourcesAccountId}:role/${RoleName}"

          - Sid: AllowUserToViewGroupMemberships
            Effect: Allow
            Action:
              - 'iam:ListGroupsForUser'
            Resource:
              - !Join 
                - ''
                - - !Sub "arn:aws:iam::${ResourceAccessorAccountId}:user/"
                  - '${aws:username}'

          - Sid: AllowUserToManageTheirOwnMFA
            Effect: Allow 
            Action: 
              - 'iam:ListMFADevices'
              - 'iam:ResyncMFADevice'
            Resource:
              - !Join
                - ''
                - - !Sub "arn:aws:iam::${ResourceAccessorAccountId}:user/"
                  - '${aws:username}' 

          - Sid: AllowUserToGetInforAboutThemselves 
            Effect: Allow
            Action: 
              - 'iam:GetUser'
              - 'iam:ListUserPolicies'
            Resource:
              - !Join
                - ''
                - - !Sub "arn:aws:iam::${ResourceAccessorAccountId}:user/"
                  - '${aws:username}'



Outputs:
  SingleAccountSetupUserArn:
    Condition: isSingleAccountSetup    
    Description: arn for user
    Value: !GetAtt User.Arn
    Export:
      Name: UserArn

  MultiAccountSetupUserArn:
    Condition: isMultiAccountSetup    
    Description: arn for user
    Value: !GetAtt User.Arn
    Export:
      Name: UserArn