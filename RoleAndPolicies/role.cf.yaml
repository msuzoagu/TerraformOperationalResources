---
AWSTemplateFormatVersion: '2010-09-09'
Description: |
  create TerraformAdminRole and its associated trust and permissions policies
Metadata:
  AWS::Cloudformation::Interface:
    ParameterGroups: 
      - Label: 
          default: trusted account
        Parameters: 
          - TrustedAccount       
      - Label: 
          default: trusting account
        Parameters: 
          - TagKey
          - TagVal
          - Region
          - RoleName
          - LockTable
          - LogBucket
          - StateBucket
          - TrustingAccount         
          - PermissionPolicyName
Parameters:
  TagKey:
    Type: String
    Description: |
      Principal Tag Key      
  TagVal:  
    Type: String
    Description: |
      Principal Tag Key     
  Region:
    Type: String
    Description: |
      Region where resorces are created                
  RoleName: 
    Type: String
    Description: |
      Name of role used to access terraform backend resources     
  LockTable: 
    Type: String
    Description: |
      Name of the terraform DynamoDB lock table  
  LogBucket: 
    Type: String
    Description: |
      Name of the S3 bucket for terraform state logs                        
  StateBucket: 
    Type: String
    Description: |
      Name of the S3 bucket for terraform state  
  TrustingAccount:
    Type: String
    Description: |
      Resources are created here              
  TrustedAccount:
    Type: String
    Description: |
      Has access to resouces in trusting account        
  PermissionPolicyName:
    Type: String
    Description: |
      Name of the permission policy attached to role 
Rules:
  EnsureDeployingToCorrectAccount:
    Assertions:
      - Assert: !Equals
          - !Ref AWS::AccountId
          - !Ref TrustingAccount
        AssertDescription: 'Stack must be deployed in the specified aws account'
Resources: 
  #####################################################
  # Create Role                                       #
  #   - AssumeRolePolicyDocument is the trust Policy  #
  #####################################################
  Role: 
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:         
          - Effect: Allow
            Principal:
              AWS: !Ref TrustedAccount
            Action: 
              - 'sts:AssumeRole'
            Condition:
              StringEquals: 
                aws:PrincipalType: User
              StringLike:
                "sts:RoleSessionName": "${aws:username}"
                "aws:PrincipalTag/${TagKey}": "${TagVal}"
      Description: |
        assume this role from account specificed in trust
        policy in order to create terraform backend resources
        in this account. Principal assuming have the specified 
        TagKey and TagVal to assume this role.
      RoleName: !Sub "${RoleName}"
      Path: /terraform/
      ManagedPolicyArns:
        - !Ref PermissionsPolicy     

  ##############################################
  # Permission policy for role created above   #
  # Ability to delete bucket is not included   #
  ##############################################                
  PermissionsPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties: 
      ManagedPolicyName: !Sub "${PermissionPolicyName}"
      Path: /terraform/
      Description: !Sub "Permission Policy for ${RoleName}"
      PolicyDocument:
        Version: 2012-10-17
        # Permissions are based on:
        # https://www.terraform.io/docs/backends/types/s3.html#example-configuration
        Statement:
          - Sid: AllowStateBucketList
            Effect: Allow
            Action:
              - 's3:ListBucket'
              - 's3:GetBucketVersioning'
            Resource: 
              - !Sub "arn:aws:s3:::${StateBucket}"          
          - Sid: AllowStateReadWrite
            Effect: Allow
            Action:
              - 's3:GetObject'
              - 's3:PutObject'
            Resource: 
              - !Sub "arn:aws:s3:::${LogBucket}/*" 
          - Sid: AllowStateLockReadWrite
            Effect: Allow
            Action:
              - 'dynamodb:DescribeTable'
              - 'dynamodb:GetItem'
              - 'dynamodb:PutItem'
              - 'dynamodb:DeleteItem'   
            Resource: 
              - !Sub "arn:aws:dynamodb:${Region}:${TrustingAccount}:table/${LockTable}"                  


